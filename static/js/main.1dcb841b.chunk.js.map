{"version":3,"sources":["components/Subtitle/index.js","components/RasaAssistant/index.js","components/VoiceModule/SpeakRecognize.js","components/VoiceModule/SpeakSynthesis.js","components/VoiceModule/index.js","components/CheatSheet/index.js","img/usmlogocut.png","components/USMLogo/index.js","components/Live2DViewer/index.js","App.js","index.js"],"names":["Subtitle","props","className","text","noop","socketErrorEventNames","useAssistant","sockUrl","sockOpts","initSessionId","initMsg","onError","onUtter","sockRef","useRef","sessionIdRef","useEffect","match","sockHostname","sockPath","sock","io","path","current","forEach","errorEventName","on","e","type","payload","restartSession","sessInfo","console","log","handleBotUtter","close","useCallback","session_id","emit","triggerRestartSession","a","open","userUtter","message","send","msg","msgTpl","ts","Date","now","direction","metadata","botUtter","useSpeechRecognize","onResult","onNoMatch","useState","transcript","setTranscript","useReducer","state","action","Error","undefined","listening","dispatchListen","listenRef","startRecognize","Promise","resolve","reject","speechConfig","sdk","fromSubscription","audioConfig","fromDefaultMicrophoneInput","recognizer","recognizeOnceAsync","result","final_transcript","reason","RecognizedSpeech","getListening","useSpeechSynthesis","add","useAsyncQueue","concurrency","id","setId","setText","audioLevel","dispatch","idRef","textRef","audioLevelRef","getId","incrementId","generateSSML","synthesizeSpeech","synthesizer","speakSsmlAsync","audioData","error","playSpeech","promise","audioContext","AudioContext","then","audioBlob","Blob","audioElement","Audio","window","URL","createObjectURL","play","frameId","audioStream","captureStream","analyser","createAnalyser","source","createMediaStreamSource","pcmData","Float32Array","fftSize","connect","render","getFloatTimeDomainData","sumSquares","amplitude","Math","sqrt","length","toFixed","requestAnimationFrame","addEventListener","disconnect","cancelAnimationFrame","pause","removeAttribute","remove","speakSynthesis","subtitle","task","getText","getAudioLevel","useVoiceModule","transports","CheatSheet","USMLogo","src","Logo","alt","Application","registerPlugin","TickerPlugin","Live2DModel","registerTicker","Ticker","Live2DViewer","containerRef","canvasRef","appRef","modelRef","forOnce","setForOnce","useAsyncEffect","view","autoStart","resizeTo","transparent","from","model","scale","set","updateFn","internalModel","motionManager","update","args","apply","coreModel","setParameterValueById","stage","addChild","children","x","width","ref","hidden","onClick","preventDefault","handleClick","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dcb841b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../css/subtitle.css\";\n\nconst Subtitle = (props) => {\n  return (\n    <div className=\"subtitle-text mx-auto text-center\">\n      <p>{(props.text !== \"\" || null) && <span>{props.text}</span>}</p>\n    </div>\n  );\n};\n\nexport default Subtitle;\n","import io from \"socket.io-client\";\nimport {useCallback, useEffect, useRef} from \"react\";\n\n// Custom version of react-rasa-assistant\nexport const useAssistant = ({\n  sockUrl,\n  sockOpts,\n  initSessionId,\n  initMsg,\n  onError = noop,\n  onUtter = noop,\n}) => {\n  const sockRef = useRef(null);\n  const sessionIdRef = useRef(null);\n\n  useEffect(() => {\n    const [, sockHostname, sockPath] = sockUrl.match(\n        /^((?:http|ws)s?:\\/\\/[^/]+)(\\/.*)$/\n      ),\n      sock = io(sockHostname, { path: sockPath, ...sockOpts });\n\n    sockRef.current = sock;\n\n    socketErrorEventNames.forEach((errorEventName) =>\n      sock.on(errorEventName, (e) => {\n        if (errorEventName === \"disconnect\" && e === \"io client disconnect\")\n          // this is fired on manual disconnects so not an error\n          return;\n\n        onError({ type: errorEventName, payload: e });\n      })\n    );\n\n    sock\n      .on(\"connect\", () => restartSession(sock, initSessionId))\n\n      .on(\"session_confirm\", (sessInfo) => {\n        // sessionIdRef.current = sessInfo.session_id;\n        sessionIdRef.current = sessInfo;\n        console.log(\n          \"New session created! : \" + sessionIdRef.current + \"/\" + sessInfo\n        );\n        if (initMsg) handleBotUtter(initMsg);\n      })\n\n      .on(\"bot_uttered\", handleBotUtter);\n\n    return () => sock.close();\n  }, []);\n\n  const restartSession = useCallback(\n    (sock, session_id) =>\n      sockRef.current.emit(\"session_request\", { session_id }),\n    []\n  );\n\n  const triggerRestartSession = async () => {\n    const sock = sockRef.current;\n    await sock.close();\n    await sock.open();\n  };\n\n  const userUtter = useCallback(\n    (text, payload) => {\n      sockRef.current.emit(\"user_uttered\", {\n        session_id: sessionIdRef.current,\n        message: payload || text,\n      });\n    },\n\n    []\n  );\n\n  const send = useCallback(\n    (message) => {\n      userUtter(message);\n    },\n    [userUtter]\n  );\n\n  const handleBotUtter = useCallback(\n    (msg) => {\n      const msgTpl = {\n        ts: Date.now(),\n        direction: \"in\",\n        metadata: msg.metadata,\n      };\n\n      onUtter({ ...msgTpl, ...msg });\n    },\n    [onUtter]\n  );\n\n  return {\n    send,\n    botUtter: handleBotUtter,\n    restartSession,\n    triggerRestartSession,\n  };\n};\n\nconst noop = () => null;\n\nconst socketErrorEventNames = [\n  \"error\",\n  \"connect_error\",\n  \"connect_timeout\",\n  \"reconnect_error\",\n  \"reconnect_failed\",\n  \"disconnect\",\n];\n\nexport default useAssistant;\n","import { useEffect, useReducer, useRef, useState } from \"react\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\n\nconst useSpeechRecognize = (onResult = () => null, onNoMatch = () => null) => {\n  const [transcript, setTranscript] = useState(null);\n  const [listening, dispatchListen] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case \"start\":\n          return true;\n        case \"stop\":\n          return false;\n        default:\n          throw new Error(\"Unexpected action\");\n      }\n    },\n    false,\n    undefined\n  );\n  const listenRef = useRef(false);\n\n  useEffect(() => {\n    listenRef.current = listening;\n  }, [listening]);\n\n  const startRecognize = () => {\n    return new Promise((resolve, reject) => {\n      const speechConfig = sdk.SpeechConfig.fromSubscription(\n        \"6a15144b41b74b66bd68b9d11d2ba8cd\",\n        \"southeastasia\"\n      );\n      const audioConfig = sdk.AudioConfig.fromDefaultMicrophoneInput();\n      const recognizer = new sdk.SpeechRecognizer(speechConfig, audioConfig);\n\n      console.log(\"Voice recognition started.\");\n      dispatchListen({ type: \"start\" });\n\n      recognizer.recognizeOnceAsync((result) => {\n        let final_transcript;\n        if (result.reason === sdk.ResultReason.RecognizedSpeech) {\n          final_transcript = result.text;\n        } else {\n          final_transcript =\n            \"Speech was cancelled or could not be recognized. Ensure your microphone is working properly.\";\n          onNoMatch();\n          reject();\n        }\n        dispatchListen({ type: \"stop\" });\n        console.log(\"Final result: \" + final_transcript);\n        setTranscript(final_transcript);\n        onResult(final_transcript);\n        resolve();\n      });\n    });\n  };\n\n  const getListening = () => {\n    return listenRef.current;\n  };\n\n  return { transcript, startRecognize, getListening };\n};\n\nexport default useSpeechRecognize;\n","import { useEffect, useReducer, useRef, useState } from \"react\";\nimport useAsyncQueue from \"use-async-queue\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\n\nconst useSpeechSynthesis = () => {\n  const { add } = useAsyncQueue({\n    concurrency: 1,\n  });\n\n  const [id, setId] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [audioLevel, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"set\":\n        return action.payload;\n      case \"reset\":\n        return 0.0;\n      default:\n        throw new Error(\"Unexpected action\");\n    }\n  }, 0.0);\n\n  const idRef = useRef(0);\n  const textRef = useRef(\"\");\n  const audioLevelRef = useRef(0);\n\n  useEffect(() => {\n    audioLevelRef.current = audioLevel;\n  }, [audioLevel]);\n\n  const getAudioLevel = () => {\n    return audioLevelRef.current;\n  };\n\n  useEffect(() => {\n    idRef.current = id;\n  }, [id]);\n\n  useEffect(() => {\n    textRef.current = text;\n  }, [text]);\n\n  const getId = () => {\n    return idRef.current;\n  };\n\n  const getText = () => {\n    return textRef.current;\n  };\n\n  const incrementId = () => {\n    setId(id + 1);\n  };\n\n  const generateSSML = (text) => {\n    const ssml = `<speak version=\"1.0\" xmlns=\"https://www.w3.org/2001/10/synthesis\" xml:lang=\"en-US\">\n  <voice name=\"en-US-GuyRUS\">\n    ${text}\n  </voice>\n</speak>`;\n    return ssml;\n  };\n\n  const synthesizeSpeech = (text = \"\") => {\n    return new Promise((resolve, reject) => {\n      const speechConfig = sdk.SpeechConfig.fromSubscription(\n        \"6a15144b41b74b66bd68b9d11d2ba8cd\",\n        \"southeastasia\"\n      );\n      const audioConfig = null;\n      const synthesizer = new sdk.SpeechSynthesizer(speechConfig, audioConfig);\n      synthesizer.speakSsmlAsync(\n        generateSSML(text),\n        (result) => {\n          synthesizer.close();\n          resolve(result.audioData);\n        },\n        (error) => {\n          console.log(error);\n          synthesizer.close();\n          reject(error);\n        }\n      );\n    });\n  };\n\n  const playSpeech = (promise, text) => {\n    return new Promise((resolve, reject) => {\n      const audioContext = new AudioContext();\n      promise.then((audioData) => {\n        const audioBlob = new Blob([audioData], {\n          type: \"audio/wav\",\n        });\n        const audioElement = new Audio(window.URL.createObjectURL(audioBlob));\n        audioElement.play().then(() => {\n          setText(text);\n          const audioStream = audioElement.captureStream();\n          const analyser = audioContext.createAnalyser();\n          const source = audioContext.createMediaStreamSource(audioStream);\n          const pcmData = new Float32Array(analyser.fftSize);\n          let frameId;\n\n          source.connect(analyser);\n          const render = () => {\n            analyser.getFloatTimeDomainData(pcmData);\n            let sumSquares = 0.0;\n            for (let amplitude of pcmData) {\n              sumSquares += amplitude * amplitude;\n            }\n            dispatch({\n              type: \"set\",\n              payload: (Math.sqrt(sumSquares / pcmData.length) * 5).toFixed(1),\n            });\n            frameId = requestAnimationFrame(render);\n          };\n          render();\n\n          audioElement.addEventListener(\"ended\", () => {\n            setText(\"\");\n            source.disconnect();\n            analyser.disconnect();\n            cancelAnimationFrame(frameId);\n            audioElement.pause();\n            audioElement.removeAttribute(\"src\");\n            audioElement.remove();\n            dispatch({ type: \"reset\" });\n            resolve();\n          });\n          audioElement.addEventListener(\"error\", () => {\n            reject();\n          });\n        });\n      });\n    });\n  };\n\n  const speakSynthesis = (subtitle = \"\") => {\n    incrementId();\n    add({\n      id: getId(),\n      task: () => {\n        return playSpeech(synthesizeSpeech(subtitle), subtitle);\n      },\n    });\n  };\n\n  return { speakSynthesis, getText, getAudioLevel };\n};\n\nexport default useSpeechSynthesis;\n","import useAssistant from \"../RasaAssistant\";\nimport useSpeechRecognize from \"./SpeakRecognize\";\nimport useSpeechSynthesis from \"./SpeakSynthesis\";\n\nexport const useVoiceModule = () => {\n  const { send, triggerRestartSession } = useAssistant({\n    sockUrl: \"http://localhost:5005/socket.io/\",\n    sockOpts: { transports: [\"websocket\"] },\n    onUtter: (message) => {\n      speakSynthesis(message.text);\n    },\n  });\n\n  const handleNewUserMessage = (message) => {\n    send(message);\n  };\n\n  const handleNoMatchRecoginition = () => {\n    const message =\n      \"I am sorry. I cannot hear you. Please speak louder and clearer.\";\n    speakSynthesis(message);\n  };\n\n  const { startRecognize, getListening } = useSpeechRecognize(\n    handleNewUserMessage,\n    handleNoMatchRecoginition\n  );\n\n  const { speakSynthesis, getText, getAudioLevel } = useSpeechSynthesis();\n\n  return {\n    getText,\n    getAudioLevel,\n    startRecognize,\n    triggerRestartSession,\n    getListening,\n  };\n};\n\nexport default useVoiceModule;\n","import React from \"react\";\nimport \"../../css/cheatsheet.css\";\n\nconst CheatSheet = () => {\n  return (\n    <div className=\"cheat-card\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Quick Guide</h5>\n          <h6 className=\"card-subtitle mb-2 text-muted\">\n            Simple guide to get started using the system\n          </h6>\n          <ul className=\"list-group card-text\">\n            <li className=\"list-group-item\">\n              <h6>What...?</h6>\n              <p className=\"small\">\n                Ask the explanation of many things related to the CS School such\n                as the current Dean, computer science meaning or major subjects.\n              </p>\n            </li>\n            <li className=\"list-group-item\">\n              <h6>Where...?</h6>\n              <p className=\"small\">\n                Ask the direction to many places in the CS School such as Dean's\n                Office, School Office or Surau.\n              </p>\n            </li>\n            <li className=\"list-group-item\">\n              <h6>Why / How...?</h6>\n              <p className=\"small\">\n                Inquiry about many subjects about the CS School such as the\n                reasoning behind internship programme, graduate requirements or\n                and others.\n              </p>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheatSheet;\n","export default __webpack_public_path__ + \"static/media/usmlogocut.908cfbbb.png\";","import Logo from \"../../img/usmlogocut.png\";\n\nconst USMLogo = () => {\n  return (\n    <div className=\"usm_logo\">\n      <img src={Logo} alt=\"USM | Universiti Sains Malaysia - Logo\" />\n    </div>\n  );\n};\n\nexport default USMLogo;\n","import React, { useRef, useState } from \"react\";\nimport \"../../css/live2dviewer.css\";\nimport { Application } from \"@pixi/app\";\nimport { Ticker, TickerPlugin } from \"@pixi/ticker\";\nimport { Live2DModel } from \"pixi-live2d-display/lib/cubism4\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Subtitle from \"../Subtitle\";\nimport useVoiceModule from \"../VoiceModule\";\nimport CheatSheet from \"../CheatSheet\";\nimport USMLogo from \"../USMLogo\";\n\nApplication.registerPlugin(TickerPlugin);\nLive2DModel.registerTicker(Ticker);\n\nconst Live2DViewer = () => {\n  const containerRef = useRef();\n  const canvasRef = useRef();\n  const appRef = useRef();\n  const modelRef = useRef();\n  const [forOnce, setForOnce] = useState(false);\n\n  const {\n    getText,\n    getAudioLevel,\n    startRecognize,\n    getListening,\n  } = useVoiceModule();\n\n  useAsyncEffect(async () => {\n    appRef.current = new Application({\n      view: canvasRef.current,\n      autoStart: true,\n      /*backgroundColor: 0xb19cd9,*/\n      resizeTo: containerRef.current,\n      transparent: true,\n    });\n    await Live2DModel.from(\"chitose/chitose.model3.json\").then((model) => {\n      model.scale.set(0.3);\n\n      const updateFn = model.internalModel.motionManager.update;\n      model.internalModel.motionManager.update = (...args) => {\n        updateFn.apply(model.internalModel.motionManager, args);\n\n        model.internalModel.coreModel.setParameterValueById(\n          \"PARAM_MOUTH_OPEN_Y\",\n          getAudioLevel()\n        );\n      };\n      appRef.current.stage.addChild(model);\n      modelRef.current = model;\n\n      appRef.current.stage.children[0].x = appRef.current.stage.width / 2;\n    });\n  }, []);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    startRecognize();\n  };\n\n  console.log(getListening());\n\n  return (\n    <div className=\"live2d-viewer\" ref={containerRef}>\n      <canvas ref={canvasRef} />\n      <Subtitle text={getText()} />\n      <USMLogo />\n      <div className=\"card speak-tutor\" hidden={forOnce}>\n        Select this button and say \"Hi\" to begin conversation!\n      </div>\n      <button\n        className=\"btn btn-lg btn-light speak-btn\"\n        onClick={(e) => {\n          setForOnce(true);\n          handleClick(e);\n        }}\n      >\n        <b>SPEAK</b>\n      </button>\n\n      <CheatSheet />\n    </div>\n  );\n};\n\nexport default Live2DViewer;\n","import React from \"react\";\nimport Live2DViewer from \"./components/Live2DViewer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Live2DViewer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}